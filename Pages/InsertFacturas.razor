@page "/facturadetails"
@page "/facturadetails/{id:int}"
@inject NavigationManager NavigationManager
@inject IFacturaService FacturaService


@if (factura == null)
{



<p><em>Loading..</em></p>

}
else
{
<EditForm Model="factura">
    @if (mensaje != "")
    {
        <div class="alert alert-danger" role="alert">
            @mensaje
        </div>
    }



<table class="table">
    <tr>Datos del beneficiario</tr>

    <tr>
        <td>Nombre de la persona</td>
        <td><input class="form-control col-sm-4" type="text" @bind="@factura.nameOwner" /></td>
    </tr>

    <tr>
        <td>Correo</td>
        <td><input class="form-control col-sm-4" type="text" @bind="@factura.email" /></td>
    </tr>

    <tr>Datos de la Adquisición</tr>
    <tr>
        <td>Descripción</td>
        <td><input class="form-control col-sm-4" type="text" @bind="@factura.description" /></td>
    </tr>
    <tr>
        <td>Precio</td>
        <td><input class="form-control col-sm-4" type="text" @bind="@factura.price" /></td>
    </tr>
    <tr>
        <td>Fecha de factura</td>
        <td><input class="form-control col-sm-4" type="text" @bind="@factura.dateFacture" /></td>
    </tr>

    <tr>
        <td colspan="2" style="text-align:center">
            <input class="btn btn-success" type="submit" value="Save" @onclick="saveFactura" />
            <a href="/facturas"><input class="btn btn-danger" type="button" value="Cancel" /></a>
        </td>
    </tr>
</table>


</EditForm>   

}




@code {
    [Parameter]
    public int id { get; set; }
    private Factura factura = new Factura();
    private string mensaje = "";

    protected async override Task OnInitializedAsync()
    {
        try
        {
            if (id != 0)
            {
                factura = await FacturaService.getFacturaDetails(id);
            }
            factura.dateFacture = DateTime.Now;
        }
        catch(Exception e)
        {
            throw e;
        }
    }

    private async Task saveFactura()
    {

        if (factura.nameOwner==null || factura.price==0 || factura.description==null)
        {
            mensaje = "No puede haber campos nulos";
        }
        else if (factura.price < 0)
        {
            mensaje = "Los montos no pueden ser negativos";
        }
        else
        {
            try
            {
                await FacturaService.saveFactura(factura);
                NavigationManager.NavigateTo("/facturas");

            }
            catch(Exception e)
            {
                throw e;
            }
        }

    }

}
